Requirements
--------------

Software Requirements
````````````````````````````````````````````
- Operating System: Windows 10, Windows Server 2016

Hardware Requirements
````````````````````````````````````````````
- Processor: 4 Core CPU
- Memory: 16 GB RAM
- Storage: 1 GB Free Drive Space

Windows Docker Software Installation
--------------
#. Download and install the latest version of Docker from `here <https://hub.docker.com/editions/community/docker-ce-desktop-windows/>`_
    .. figure:: /_static/images/nlq_gifs/nlq_rename_windows.GIF
        :align: center
        :width: 653px
#. Right click on Docker Desktop and Switch to Linux Containers (for Windows only)
    .. figure:: /_static/images/nlq_gifs/nlq_linuxcontainer.GIF
        :align: centernlq_linuxcontainer
        :width: 653px

Izenda NLQ Installation
--------------
Pull and run the docker container from Izenda's docker hub `repository <https://hub.docker.com/r/izendainc/izenda-ml-app>`_

#. Create docker-compose.yml file (Found at the bottom of the page) 
    .. figure:: /_static/images/nlq_gifs/nlq_createcompose.GIF
        :align: center
        :width: 653px

#. Start a new instance of the command prompt. Navigate to the directory where the docker-compose file is present. Run the following commands and verify docker login credentials.
        .. code-block:: code

         docker login --username=izendaeng
         Password: <Password>
         docker-compose up -d

    .. figure:: /_static/images/nlq_gifs/nlq_powershell.GIF
        :align: center
        :width: 653px

Port Management
--------------
#. Open port 8000 to allow TCP access from outside sources. The NLQ application will be posted on port 8000. Izenda's BI application will use port 8000 by default to connect to the NLQ application.
#. Additionally, open port 5432 and 8983 in Windows Defender Firewall 
#. On the machine where SQL Server is installed, create an inbound rule for 1433 and white-list the machine IP where the NLQ docker was installed.
#. On the same machine, open port 1433 in Windows Defender Firewall
#. For SQL Server, Enable TCP/IP connections in SQL Server Configuration Manager


Izenda Application NLQ Configuration
--------------
#. Navigate to the NLQ Settings page in the Izenda BI application.
#. Enter the IP address of the machine where the NLQ application is running, specifying port 8000. (ie. 12.345.678.90:8000)
    - Test connection and click 'Save'.
    - Select the specific data connector you want to run the NLQ application against. 
    - Click 'Configure'. This step may take a few minutes to finish running. 
#. When the configuration is done, a notification should appear under the bell icon at the top right.
#. Navigate to the Explore tab and start creating visualizations.

    .. figure:: /_static/images/nlq_gifs/nlq_configure.GIF
        :align: center
        :width: 653px

Reference Files
--------------
docker-compose.yml

.. code-block:: c

    version: '3.1'

    services:
        ml_app:
            container_name: ml_app
            restart: always
            # build: .
            image: izendainc/izenda-ml-app:1.0.0
            # image: ml_app
            depends_on:
            - db
            - nlp_solr
            ports:
            - "8000:8000"
            volumes:
            - appdata:/usr/src/ml_services/app
            - solrdata2:/usr/src/ml_services/app/xml
        db:
            container_name: pg_sql
            restart: always
            image: postgres:10.1
            environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: telegram@678
            POSTGRES_DB: configdb
            ports:
            - 5432:5432
            volumes:
            - pgdata:/var/lib/postgresql/data
        nlp_solr:
            container_name: nlp_solr
            image: izendainc/nlp_solr:1.0.0
            # image: nlp_solr 
            # build : solr_docker
            command: bin/solr start -f
            ports:
            - "8983:8983"
            volumes:
            - solrdata1:/opt/solr
            - solrdata2:/var/solr/data
            # tty: false
            # stdin_open: false
    volumes:
        solrdata1:
        solrdata2:
        pgdata:
        appdata: